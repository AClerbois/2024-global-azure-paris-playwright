parameters:
  - name: dependsOn
    type: object

  - name: environmentName
    type: string

  - name: environment
    type: string

  - name: azureSubscription
    type: string
    default: "Microsoft Azure Sponsorship(939a2510-ec6f-4af4-a7c7-57509096c191)"

  - name: azureWebAppName
    type: string

  - name: azureWebUrl
    type: string

stages:
  - stage: ${{ parameters.environment}}_env
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - deployment: deploy_to_${{ parameters.environment}}
        displayName: Deploy to ${{ parameters.environment}} env
        pool:
          vmImage: ubuntu-latest
        environment:
          name: ${{ parameters.environmentName}}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  displayName: Download website artifact
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "website"
                    downloadPath: "$(System.ArtifactsDirectory)"

                - task: AzureRmWebAppDeployment@4
                  displayName: Publish website to dev
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: ${{ parameters.azureSubscription}}
                    appType: "webAppLinux"
                    WebAppName: ${{ parameters.azureWebAppName}}
                    packageForLinux: "$(System.ArtifactsDirectory)/**/*.zip"
                    RuntimeStack: "DOTNETCORE|8.0"

            routeTraffic:
              steps:
                - checkout: none
                  displayName: prevent to checkout code
                - task: DownloadBuildArtifacts@1
                  displayName: Download automated-tests artifact
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "automated-tests"
                    downloadPath: "$(System.ArtifactsDirectory)"

                - task: ExtractFiles@1
                  displayName: Extract archive automated-tests
                  inputs:
                    archiveFilePatterns: "$(System.ArtifactsDirectory)/**/*.zip"
                    destinationFolder: "$(System.WorkFolder)/tests"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: false

                - task: PowerShell@2
                  inputs:
                    targetType: "inline"
                    script: |
                      $configxml = [xml](Get-Content $(System.WorkFolder)/tests/config.runsettings)

                      $appUrl = $configxml.SelectSingleNode("//RunSettings//TestRunParameters//Parameter[@name=""websiteUrl""]")

                      $appUrl.SetAttribute("value","${{ parameters.azureWebUrl }}")

                      $envUrl = $configxml.SelectSingleNode("//RunSettings//TestRunParameters//Parameter[@name=""environment""]")

                      $envUrl.SetAttribute("value","${{ parameters.environment}}")

                      $configxml.Save("$(System.WorkFolder)/tests/config.runsettings")

                - task: UseDotNet@2
                  displayName: "Use .Net sdk"
                  inputs:
                    version: 8.x

                - task: PowerShell@2
                  displayName: "Install Playwright"
                  inputs:
                    targetType: "inline"
                    script: "./playwright.ps1 install"
                    workingDirectory: "$(System.WorkFolder)/tests"

                - task: DotNetCoreCLI@2
                  displayName: "Test automated tests"
                  env:
                    PLAYWRIGHT_SERVICE_ACCESS_TOKEN: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjBiODMzNWViM2VmYzRjMjI5ZjBlY2Q5M2NjYzc1M2VhIiwidHlwIjoiSldUIn0.eyJhaWQiOiJ3ZXN0ZXVyb3BlXzBjNWUzNTZhLWYxOTctNGFmMy04ZDEwLTgxMzM5MjkyYjUxMSIsInN1YiI6InBsYXl3cmlnaHRzZXJ2aWNlYWNjZXNza2V5IiwiaWQiOiJmNjFkOTVkOS1kODk0LTRjYzItOGZkOC0wZTI1NmY3OTI4ZDAiLCJzY29wZSI6InRlc3RleGVjdXRpb24iLCJ2ZXIiOiIxLjAiLCJ1c2VyTmFtZSI6IkFkcmllbiBDbGVyYm9pcyIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzNkODlmYzhkLWY4YmUtNGRlNS1hMmRiLWJhNDM1Nzc3MmQzZC8iLCJhbHRzZWNpZCI6IjE6bGl2ZS5jb206MDAwM0JGRkRCMzI5OUE3NSIsImFwcGlkIjoiYjFmZDRlYmYtMmJlZC00MTYyLWJlODQtOTdlMGZlNTIzZjY0IiwiYXBwaWRhY3IiOiIwIiwiZ3JvdXBzIjoiNGYzNjVkNjYtM2EyZC00ZWQ3LWJlNGYtNzBmYzlhODI2MDFhIiwiaWRwIjoibGl2ZS5jb20iLCJvaWQiOiI3NWQzYWVmZS0wNDJiLTRlN2EtYjdiNC0xZGVlOWY0YTQyMzUiLCJwdWlkIjoiMTAwMzdGRkU4OTYzNDU1MyIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInRpZCI6IjNkODlmYzhkLWY4YmUtNGRlNS1hMmRiLWJhNDM1Nzc3MmQzZCIsIndpZHMiOlsiNjJlOTAzOTQtNjlmNS00MjM3LTkxOTAtMDEyMTc3MTQ1ZTEwIiwiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sIm5iZiI6MTcxMzU1Nzg3NSwiZXhwIjoxNzE2MTQ5ODczLCJpYXQiOjE3MTM1NTc4NzV9.fZ1E7YJrEKMwnQjfVxKZu_CF2asqTWcpRLe9wj1-45f5SdSkTexThVsaAAoB_xa2y3goKuk70WBJm3gdib-3FDKXD-Aa7J19P2BW4ipqtJr4C0BL8o6uXX271ScW2AAZwSh9AatBqkGjQtsACz02wGbfTQ-jiLfvT-wlf6S2pyOrCkhFLz6XO7RTxFVKlkFVayWh7PC-H-6HyhNWqXhGHurYTGRch2NwaE3PVAEPx_eso3ZS7jA72zAq6WUhemFmViMlruhmNeUmnsTxxaxKREx1-ojGAAbJ2tj_lwZBxBR0jwYo3OtzmEjjvFmfB8rFU5TAuhGBBSyY18ZKI5iQ8w"
                    PLAYWRIGHT_SERVICE_URL: "wss://westeurope.api.playwright.microsoft.com/api/authorize/connectSession"
                  inputs:
                    command: "custom"
                    
                    projects: "$(System.WorkFolder)/tests/AutomatedTests.dll"
                    custom: "test"
                    arguments: ' -s config.runsettings --logger "trx;logfilename=testResults.trx"'
                    workingDirectory: "$(System.WorkFolder)/tests"

                - task: PublishTestResults@2
                  inputs:
                    testResultsFormat: "VSTest"
                    testResultsFiles: |
                      **/TEST-*.xml
                      **/test*.trx
                    searchFolder: "$(System.WorkFolder)"
                    mergeTestResults: true
                    testRunTitle: "AutomatedTest-${{ parameters.environment }}-results"
